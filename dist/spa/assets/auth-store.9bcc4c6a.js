import{F as h,G as S}from"./index.f80d0101.js";function y(e){return typeof e=="object"&&e!==null}function d(e,r){return e=y(e)?e:Object.create(null),new Proxy(e,{get(s,i,t){return i==="key"?Reflect.get(s,i,t):Reflect.get(s,i,t)||Reflect.get(r,i,t)}})}function _(e,r){return r.reduce((s,i)=>s==null?void 0:s[i],e)}function $(e,r,s){return r.slice(0,-1).reduce((i,t)=>/^(__proto__)$/.test(t)?{}:i[t]=i[t]||{},e)[r[r.length-1]]=s,e}function m(e,r){return r.reduce((s,i)=>{const t=i.split(".");return $(s,t,_(e,t))},{})}function v(e,r){return s=>{var i;try{const{storage:t=localStorage,beforeRestore:o=void 0,afterRestore:u=void 0,serializer:n={serialize:JSON.stringify,deserialize:JSON.parse},key:a=r.$id,paths:l=null,debug:c=!1}=s;return{storage:t,beforeRestore:o,afterRestore:u,serializer:n,key:((i=e.key)!=null?i:f=>f)(typeof a=="string"?a:a(r.$id)),paths:l,debug:c}}catch(t){return s.debug&&console.error("[pinia-plugin-persistedstate]",t),null}}}function p(e,{storage:r,serializer:s,key:i,debug:t}){try{const o=r==null?void 0:r.getItem(i);o&&e.$patch(s==null?void 0:s.deserialize(o))}catch(o){t&&console.error("[pinia-plugin-persistedstate]",o)}}function g(e,{storage:r,serializer:s,key:i,paths:t,debug:o}){try{const u=Array.isArray(t)?m(e,t):e;r.setItem(i,s.serialize(u))}catch(u){o&&console.error("[pinia-plugin-persistedstate]",u)}}function R(e={}){return r=>{const{auto:s=!1}=e,{options:{persist:i=s},store:t,pinia:o}=r;if(!i)return;if(!(t.$id in o.state.value)){const n=o._s.get(t.$id.replace("__hot:",""));n&&Promise.resolve().then(()=>n.$persist());return}const u=(Array.isArray(i)?i.map(n=>d(n,e)):[d(i,e)]).map(v(e,t)).filter(Boolean);t.$persist=()=>{u.forEach(n=>{g(t.$state,n)})},t.$hydrate=({runHooks:n=!0}={})=>{u.forEach(a=>{const{beforeRestore:l,afterRestore:c}=a;n&&(l==null||l(r)),p(t,a),n&&(c==null||c(r))})},u.forEach(n=>{const{beforeRestore:a,afterRestore:l}=n;a==null||a(r),p(t,n),l==null||l(r),t.$subscribe((c,f)=>{g(f,n)},{detached:!0})})}}var b=R();const P=h();P.use(b);const z=S({id:"store",state:()=>({token:!1,user:{}}),actions:{updateState(e){this.token=!0,this.user=e,this.router.push("/Panel"),console.log("Sesion iniciada")},resetState(e){this.token=e,this.user={}}},getters:{getUser(){return this.user}},persist:!0});export{z as u};
